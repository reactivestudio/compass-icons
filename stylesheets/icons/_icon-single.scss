
// compass-icons: icon-single
// -----------------------


/// Embed a single icon as inline-image (no spritemap).
/// Should be used sporadically.
///
/// @group icons
///
/// @requires conf
/// @requires _join
/// @requires Compass::inline-image
/// @requires Compass::inline-url
/// @requires Compass::image-width
/// @requires {mixin} hidpi-mq
///
/// @param {String} $map - spritemap name
/// @param {String} $sprite - sprite name
/// @param {String} $format (conf(format)) - file format 'svg' | 'png'
///
/// @output Cross-browser icon as background-image

@mixin icon-single(
  $map,
  $sprite,
  $format: conf(format)
) {

  // sprite-file() and inline-image() no work.
  // @see https://github.com/chriseppstein/compass/issues/951

  $dir: conf(dir);
  $svg-file: _join(($dir, $map, '#{$sprite}.svg'), '/');
  $png-file-1x: _join(($dir, $map, conf(dir-png), '#{$sprite}.png'), '/');
  $png-file-2x: _join(($dir, $map, conf(dir-hidpi), '#{$sprite}.png'), '/');

  $function: if(conf(single-embed), inline-image, image-url);
  $svg-url: call($function, $svg-file);
  $png-url-1x: call($function, $png-file-1x);
  $png-url-2x: call($function, $png-file-2x);

  $legacy-support: conf(legacy);

  // Allow to pass format as uppercase.
  $format: to-lower-case($format);

  @if $format == 'svg' {

    background: {
      image: $svg-url;
      repeat: no-repeat;
    }

    .svg & {
      @content;
    }

    @if $legacy-support {
      .no-svg &,
      .no-js & {
        background-image: $png-url-1x;
      }
    }

  }
  @else if $format == 'png' {

    background: {
      image: $png-url-1x;
      repeat: no-repeat;
    }

    @include hidpi-mq {
      background: {
        image: $png-url-2x;
        size: ceil(image-width($png-file-2x) / conf(hidpi-scale)) auto;
      }
    }
  }
}
