
// compass-icons: sprite-map-create
// -----------------------------


////
//// @group icons
////


/// Spritemaps storage.
///
/// @access private
/// @type Map

$icons-spritemaps: ();


/// Create a new spritemap from folder.
///
/// @requires conf
/// @requires _join
/// @requires {mixin} hidpi-mq
/// @requires {variable} icons-spritemaps
/// @requires Compass::sprite-map
/// @requires Compass::sprite-path
/// @requires Compass::image-width
///
/// @param {String} $name - spritemap name, which is also the folder name
/// @param {Number} $spacing (conf(spacing)) - Whether to add space around sprites in generated spritemap
///
/// @example scss Instantiate a new sprite map
///   @include sprite-map-create(social, $spacing: 30px);

@mixin sprite-map-create(
  $name,
  $spacing: conf(spacing)
) {
  $sprites-1x: _join((conf(dir), $name, conf(dir-png), "*.png"), "/");
  $sprites-2x: _join((conf(dir), $name, conf(dir-hidpi), "*.png"), "/");

  $map-1x: sprite-map($sprites-1x, $spacing: $spacing);
  $map-2x: sprite-map($sprites-2x, $spacing: $spacing);

  $new: ($name: (1x: $map-1x, 2x: $map-2x));
  $icons-spritemaps: map-merge($icons-spritemaps, $new) !global;

  @at-root %sprite-map-#{$name}-image-map {
    background: {
      image: $map-1x;
      repeat: no-repeat;
    }
  }
  @at-root %sprite-map-#{$name}-2x-image-map {
    @include hidpi-mq {
      background: {
        image: $map-2x;
        size: ceil(image-width(sprite-path($map-2x)) / conf(hidpi-scale)) auto;
      }
    }
  }
}
