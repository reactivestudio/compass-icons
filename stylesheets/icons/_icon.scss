
// compass-icons: icon
// ----------------


/// Main icon mixin,
/// default choice unless there are specific needs.
///
/// @group icons
///
/// @requires conf
/// @requires _sprite-map-get
/// @requires _join
/// @requires _sprite-position
/// @requires Compass::inline-image
/// @requires {mixin} hidpi-mq
///
/// @param {String} $map - spritemap name
/// @param {String} $sprite - sprite name
/// @param {List}   $offset ((0 0)) - adjustment along the x y axis
/// @param {String} $format (conf(format)) - file format 'svg' | 'png'
///
/// @example scss Include an icon
///   .twitter {
///     @include icon(social, twitter);
///   }
///
/// @output Cross-browser icon as background-image

@mixin icon(
  $map,
  $sprite,
  $offset: 0 0,
  $format: conf(format)
) {
  $map-1x: _sprite-map-get($map);
  $map-2x: _sprite-map-get($map, 2x);

  // Shorter mixin calls.
  $offset-x: nth($offset, 1);
  $offset-y: nth($offset, length($offset));

  $legacy-support: conf(legacy);

  // Allow to pass format as uppercase.
  $format: to-lower-case($format);

  @if $format == 'svg' {

    $svg-file: _join((conf(dir), $map, '#{$sprite}.svg'), '/');

    background: {
      image: inline-image($svg-file);
      repeat: no-repeat;
    }

    .svg & {
      @content;
    }

    @if $legacy-support {
      .no-svg &,
      .no-js & {

        @extend %sprite-map-#{$map}-image-map;

        background-position: _sprite-position($map-1x, $sprite, $offset-x, $offset-y);
      }
    }

  }
  @else if $format == 'png' {

    @extend %sprite-map-#{$map}-image-map;

    background-position: _sprite-position($map-1x, $sprite, $offset-x, $offset-y);

    @extend %sprite-map-#{$map}-2x-image-map;

    @include hidpi-mq {
      background-position: _sprite-position($map-2x, $sprite, $offset-x, $offset-y, conf(hidpi-scale));
    }
  }
}
