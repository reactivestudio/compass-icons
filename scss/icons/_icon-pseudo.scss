
// compass-icons: icon-pseudo
// --------------------------


/// Include the icon in a generated pseudo-element.
/// Default to `:before`.
/// Allows for easier positioning or centering.
///
/// @group icons
///
/// @requires conf
/// @requires _sprite-map-get
/// @requires {mixin} generated
/// @requires {mixin} icon
/// @requires Compass::sprite-file
/// @requires Compass::image-width
/// @requires Compass::image-height
///
/// @param {String} $map - spritemap name
/// @param {String} $sprite - sprite name
/// @param {String} $pos ('before') - pseudo-element position
/// @param {Bool} $centered (false) - whether to center the icon, relative to its parent
/// @param {String} $format (conf(format)) - file format 'svg' | 'png'
///
/// @output Cross-browser icon as background-image.

@mixin icon-pseudo(
    $map,
    $sprite,
    $position: "left",
    $valign: middle,
    $margin: 10px,
    $hover: false
    $centered: false,
    $format: conf(format)
) {
    $pseudo: "after";
    @if $position == "left" or $position == "top" {
        $pseudo: "before";
    }
    $sprite-file: sprite-file(_sprite-map-get($map), $sprite);
    $width: image-width($png-file);
    $height: image-height($png-file);

    .icon--#{$sprite} {
        &:#{$pseudo} {
            @include pseudo-genereted($width, $height, $position, $valign, $margin);
            @include icon($map: $map, $sprite: $sprite, $format: $format);
        }

        @if $hover == true {
            &:hover:#{$pseudo} {
                $sprite: $sprite + "--hover";
                @include pseudo-genereted($width, $height, $position, $valign, $margin);
                @include icon($map: $map, $sprite: $sprite, $format: $format);
            }
        }

        @content;
    }
}
